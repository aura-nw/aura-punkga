export const abi = [
  {
    type: 'constructor',
    inputs: [
      { name: '_zoraERC721TransferHelper', type: 'address', internalType: 'address' },
      { name: '_factoryUpgradeGate', type: 'address', internalType: 'contract IFactoryUpgradeGate' },
      { name: '_mintFeeAmount', type: 'uint256', internalType: 'uint256' },
      { name: '_mintFeeRecipient', type: 'address', internalType: 'address payable' },
      { name: '_protocolRewards', type: 'address', internalType: 'address' },
    ],
    stateMutability: 'nonpayable',
  },
  {
    name: 'Access_MissingRoleOrAdmin',
    type: 'error',
    inputs: [{ name: 'role', type: 'bytes32', internalType: 'bytes32' }],
  },
  { name: 'Access_OnlyAdmin', type: 'error', inputs: [] },
  { name: 'Access_WithdrawNotAllowed', type: 'error', inputs: [] },
  {
    name: 'Admin_InvalidUpgradeAddress',
    type: 'error',
    inputs: [{ name: 'proposedAddress', type: 'address', internalType: 'address' }],
  },
  { name: 'Admin_UnableToFinalizeNotOpenEdition', type: 'error', inputs: [] },
  { name: 'ApprovalCallerNotOwnerNorApproved', type: 'error', inputs: [] },
  { name: 'ApprovalQueryForNonexistentToken', type: 'error', inputs: [] },
  { name: 'ApprovalToCurrentOwner', type: 'error', inputs: [] },
  { name: 'ApproveToCaller', type: 'error', inputs: [] },
  { name: 'BalanceQueryForZeroAddress', type: 'error', inputs: [] },
  { name: 'CREATOR_FUNDS_RECIPIENT_NOT_SET', type: 'error', inputs: [] },
  { name: 'ExternalMetadataRenderer_CallFailed', type: 'error', inputs: [] },
  { name: 'INVALID_ADDRESS_ZERO', type: 'error', inputs: [] },
  { name: 'INVALID_ETH_AMOUNT', type: 'error', inputs: [] },
  { name: 'InvalidMintSchedule', type: 'error', inputs: [] },
  { name: 'MarketFilterDAOAddressNotSupportedForChain', type: 'error', inputs: [] },
  { name: 'MintFee_FundsSendFailure', type: 'error', inputs: [] },
  { name: 'MintToZeroAddress', type: 'error', inputs: [] },
  { name: 'MintZeroQuantity', type: 'error', inputs: [] },
  { name: 'Mint_SoldOut', type: 'error', inputs: [] },
  { name: 'ONLY_CREATE_REFERRAL', type: 'error', inputs: [] },
  { name: 'ONLY_OWNER', type: 'error', inputs: [] },
  { name: 'ONLY_PENDING_OWNER', type: 'error', inputs: [] },
  {
    name: 'OperatorNotAllowed',
    type: 'error',
    inputs: [{ name: 'operator', type: 'address', internalType: 'address' }],
  },
  { name: 'OwnerQueryForNonexistentToken', type: 'error', inputs: [] },
  { name: 'Presale_Inactive', type: 'error', inputs: [] },
  { name: 'Presale_MerkleNotApproved', type: 'error', inputs: [] },
  { name: 'Presale_TooManyForAddress', type: 'error', inputs: [] },
  { name: 'ProtocolRewards_WithdrawSendFailure', type: 'error', inputs: [] },
  { name: 'Purchase_TooManyForAddress', type: 'error', inputs: [] },
  {
    name: 'Purchase_WrongPrice',
    type: 'error',
    inputs: [{ name: 'correctPrice', type: 'uint256', internalType: 'uint256' }],
  },
  { name: 'RemoteOperatorFilterRegistryCallFailed', type: 'error', inputs: [] },
  { name: 'Sale_Inactive', type: 'error', inputs: [] },
  {
    name: 'Setup_RoyaltyPercentageTooHigh',
    type: 'error',
    inputs: [{ name: 'maxRoyaltyBPS', type: 'uint16', internalType: 'uint16' }],
  },
  { name: 'TransferCallerNotOwnerNorApproved', type: 'error', inputs: [] },
  { name: 'TransferFromIncorrectOwner', type: 'error', inputs: [] },
  { name: 'TransferToNonERC721ReceiverImplementer', type: 'error', inputs: [] },
  { name: 'TransferToZeroAddress', type: 'error', inputs: [] },
  { name: 'URIQueryForNonexistentToken', type: 'error', inputs: [] },
  { name: 'Withdraw_FundsSendFailure', type: 'error', inputs: [] },
  {
    name: 'AdminChanged',
    type: 'event',
    inputs: [
      { name: 'previousAdmin', type: 'address', indexed: false, internalType: 'address' },
      { name: 'newAdmin', type: 'address', indexed: false, internalType: 'address' },
    ],
    anonymous: false,
  },
  {
    name: 'Approval',
    type: 'event',
    inputs: [
      { name: 'owner', type: 'address', indexed: true, internalType: 'address' },
      { name: 'approved', type: 'address', indexed: true, internalType: 'address' },
      { name: 'tokenId', type: 'uint256', indexed: true, internalType: 'uint256' },
    ],
    anonymous: false,
  },
  {
    name: 'ApprovalForAll',
    type: 'event',
    inputs: [
      { name: 'owner', type: 'address', indexed: true, internalType: 'address' },
      { name: 'operator', type: 'address', indexed: true, internalType: 'address' },
      { name: 'approved', type: 'bool', indexed: false, internalType: 'bool' },
    ],
    anonymous: false,
  },
  {
    name: 'BatchMetadataUpdate',
    type: 'event',
    inputs: [
      { name: '_fromTokenId', type: 'uint256', indexed: false, internalType: 'uint256' },
      { name: '_toTokenId', type: 'uint256', indexed: false, internalType: 'uint256' },
    ],
    anonymous: false,
  },
  {
    name: 'BeaconUpgraded',
    type: 'event',
    inputs: [{ name: 'beacon', type: 'address', indexed: true, internalType: 'address' }],
    anonymous: false,
  },
  {
    name: 'FundsReceived',
    type: 'event',
    inputs: [
      { name: 'source', type: 'address', indexed: true, internalType: 'address' },
      { name: 'amount', type: 'uint256', indexed: false, internalType: 'uint256' },
    ],
    anonymous: false,
  },
  {
    name: 'FundsRecipientChanged',
    type: 'event',
    inputs: [
      { name: 'newAddress', type: 'address', indexed: true, internalType: 'address' },
      { name: 'changedBy', type: 'address', indexed: true, internalType: 'address' },
    ],
    anonymous: false,
  },
  {
    name: 'FundsWithdrawn',
    type: 'event',
    inputs: [
      { name: 'withdrawnBy', type: 'address', indexed: true, internalType: 'address' },
      { name: 'withdrawnTo', type: 'address', indexed: true, internalType: 'address' },
      { name: 'amount', type: 'uint256', indexed: false, internalType: 'uint256' },
      { name: 'feeRecipient', type: 'address', indexed: false, internalType: 'address' },
      { name: 'feeAmount', type: 'uint256', indexed: false, internalType: 'uint256' },
    ],
    anonymous: false,
  },
  {
    name: 'MetadataUpdate',
    type: 'event',
    inputs: [{ name: '_tokenId', type: 'uint256', indexed: false, internalType: 'uint256' }],
    anonymous: false,
  },
  {
    name: 'MintComment',
    type: 'event',
    inputs: [
      { name: 'sender', type: 'address', indexed: true, internalType: 'address' },
      { name: 'tokenContract', type: 'address', indexed: true, internalType: 'address' },
      { name: 'tokenId', type: 'uint256', indexed: true, internalType: 'uint256' },
      { name: 'quantity', type: 'uint256', indexed: false, internalType: 'uint256' },
      { name: 'comment', type: 'string', indexed: false, internalType: 'string' },
    ],
    anonymous: false,
  },
  {
    name: 'MintFeePayout',
    type: 'event',
    inputs: [
      { name: 'mintFeeAmount', type: 'uint256', indexed: false, internalType: 'uint256' },
      { name: 'mintFeeRecipient', type: 'address', indexed: false, internalType: 'address' },
      { name: 'success', type: 'bool', indexed: false, internalType: 'bool' },
    ],
    anonymous: false,
  },
  {
    name: 'OpenMintFinalized',
    type: 'event',
    inputs: [
      { name: 'sender', type: 'address', indexed: true, internalType: 'address' },
      { name: 'numberOfMints', type: 'uint256', indexed: false, internalType: 'uint256' },
    ],
    anonymous: false,
  },
  {
    name: 'OwnerCanceled',
    type: 'event',
    inputs: [
      { name: 'previousOwner', type: 'address', indexed: true, internalType: 'address' },
      { name: 'potentialNewOwner', type: 'address', indexed: true, internalType: 'address' },
    ],
    anonymous: false,
  },
  {
    name: 'OwnerPending',
    type: 'event',
    inputs: [
      { name: 'previousOwner', type: 'address', indexed: true, internalType: 'address' },
      { name: 'potentialNewOwner', type: 'address', indexed: true, internalType: 'address' },
    ],
    anonymous: false,
  },
  {
    name: 'OwnershipTransferred',
    type: 'event',
    inputs: [
      { name: 'previousOwner', type: 'address', indexed: true, internalType: 'address' },
      { name: 'newOwner', type: 'address', indexed: true, internalType: 'address' },
    ],
    anonymous: false,
  },
  {
    name: 'RoleAdminChanged',
    type: 'event',
    inputs: [
      { name: 'role', type: 'bytes32', indexed: true, internalType: 'bytes32' },
      { name: 'previousAdminRole', type: 'bytes32', indexed: true, internalType: 'bytes32' },
      { name: 'newAdminRole', type: 'bytes32', indexed: true, internalType: 'bytes32' },
    ],
    anonymous: false,
  },
  {
    name: 'RoleGranted',
    type: 'event',
    inputs: [
      { name: 'role', type: 'bytes32', indexed: true, internalType: 'bytes32' },
      { name: 'account', type: 'address', indexed: true, internalType: 'address' },
      { name: 'sender', type: 'address', indexed: true, internalType: 'address' },
    ],
    anonymous: false,
  },
  {
    name: 'RoleRevoked',
    type: 'event',
    inputs: [
      { name: 'role', type: 'bytes32', indexed: true, internalType: 'bytes32' },
      { name: 'account', type: 'address', indexed: true, internalType: 'address' },
      { name: 'sender', type: 'address', indexed: true, internalType: 'address' },
    ],
    anonymous: false,
  },
  {
    name: 'Sale',
    type: 'event',
    inputs: [
      { name: 'to', type: 'address', indexed: true, internalType: 'address' },
      { name: 'quantity', type: 'uint256', indexed: true, internalType: 'uint256' },
      { name: 'pricePerToken', type: 'uint256', indexed: true, internalType: 'uint256' },
      { name: 'firstPurchasedTokenId', type: 'uint256', indexed: false, internalType: 'uint256' },
    ],
    anonymous: false,
  },
  {
    name: 'SalesConfigChanged',
    type: 'event',
    inputs: [{ name: 'changedBy', type: 'address', indexed: true, internalType: 'address' }],
    anonymous: false,
  },
  {
    name: 'Transfer',
    type: 'event',
    inputs: [
      { name: 'from', type: 'address', indexed: true, internalType: 'address' },
      { name: 'to', type: 'address', indexed: true, internalType: 'address' },
      { name: 'tokenId', type: 'uint256', indexed: true, internalType: 'uint256' },
    ],
    anonymous: false,
  },
  {
    name: 'UpdatedMetadataRenderer',
    type: 'event',
    inputs: [
      { name: 'sender', type: 'address', indexed: false, internalType: 'address' },
      { name: 'renderer', type: 'address', indexed: false, internalType: 'contract IMetadataRenderer' },
    ],
    anonymous: false,
  },
  {
    name: 'Upgraded',
    type: 'event',
    inputs: [{ name: 'implementation', type: 'address', indexed: true, internalType: 'address' }],
    anonymous: false,
  },
  {
    name: 'DEFAULT_ADMIN_ROLE',
    type: 'function',
    inputs: [],
    outputs: [{ name: '', type: 'bytes32', internalType: 'bytes32' }],
    stateMutability: 'view',
  },
  {
    name: 'MINTER_ROLE',
    type: 'function',
    inputs: [],
    outputs: [{ name: '', type: 'bytes32', internalType: 'bytes32' }],
    stateMutability: 'view',
  },
  {
    name: 'SALES_MANAGER_ROLE',
    type: 'function',
    inputs: [],
    outputs: [{ name: '', type: 'bytes32', internalType: 'bytes32' }],
    stateMutability: 'view',
  },
  {
    name: 'adminMint',
    type: 'function',
    inputs: [
      { name: 'recipient', type: 'address', internalType: 'address' },
      { name: 'quantity', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'nonpayable',
  },
  {
    name: 'adminMintAirdrop',
    type: 'function',
    inputs: [{ name: 'recipients', type: 'address[]', internalType: 'address[]' }],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'nonpayable',
  },
  {
    name: 'approve',
    type: 'function',
    inputs: [
      { name: 'to', type: 'address', internalType: 'address' },
      { name: 'tokenId', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    name: 'balanceOf',
    type: 'function',
    inputs: [{ name: 'owner', type: 'address', internalType: 'address' }],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    name: 'burn',
    type: 'function',
    inputs: [{ name: 'tokenId', type: 'uint256', internalType: 'uint256' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    name: 'callMetadataRenderer',
    type: 'function',
    inputs: [{ name: 'data', type: 'bytes', internalType: 'bytes' }],
    outputs: [{ name: '', type: 'bytes', internalType: 'bytes' }],
    stateMutability: 'nonpayable',
  },
  {
    name: 'computeFreeMintRewards',
    type: 'function',
    inputs: [{ name: 'numTokens', type: 'uint256', internalType: 'uint256' }],
    outputs: [
      {
        name: '',
        type: 'tuple',
        components: [
          { name: 'creatorReward', type: 'uint256', internalType: 'uint256' },
          { name: 'createReferralReward', type: 'uint256', internalType: 'uint256' },
          { name: 'mintReferralReward', type: 'uint256', internalType: 'uint256' },
          { name: 'firstMinterReward', type: 'uint256', internalType: 'uint256' },
          { name: 'zoraReward', type: 'uint256', internalType: 'uint256' },
        ],
        internalType: 'struct RewardsSettings',
      },
    ],
    stateMutability: 'pure',
  },
  {
    name: 'computePaidMintRewards',
    type: 'function',
    inputs: [{ name: 'numTokens', type: 'uint256', internalType: 'uint256' }],
    outputs: [
      {
        name: '',
        type: 'tuple',
        components: [
          { name: 'creatorReward', type: 'uint256', internalType: 'uint256' },
          { name: 'createReferralReward', type: 'uint256', internalType: 'uint256' },
          { name: 'mintReferralReward', type: 'uint256', internalType: 'uint256' },
          { name: 'firstMinterReward', type: 'uint256', internalType: 'uint256' },
          { name: 'zoraReward', type: 'uint256', internalType: 'uint256' },
        ],
        internalType: 'struct RewardsSettings',
      },
    ],
    stateMutability: 'pure',
  },
  {
    name: 'computeTotalReward',
    type: 'function',
    inputs: [{ name: 'numTokens', type: 'uint256', internalType: 'uint256' }],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'pure',
  },
  {
    name: 'config',
    type: 'function',
    inputs: [],
    outputs: [
      { name: 'metadataRenderer', type: 'address', internalType: 'contract IMetadataRenderer' },
      { name: 'editionSize', type: 'uint64', internalType: 'uint64' },
      { name: 'royaltyBPS', type: 'uint16', internalType: 'uint16' },
      { name: 'fundsRecipient', type: 'address', internalType: 'address payable' },
    ],
    stateMutability: 'view',
  },
  {
    name: 'contractURI',
    type: 'function',
    inputs: [],
    outputs: [{ name: '', type: 'string', internalType: 'string' }],
    stateMutability: 'view',
  },
  {
    name: 'contractVersion',
    type: 'function',
    inputs: [],
    outputs: [{ name: '', type: 'uint32', internalType: 'uint32' }],
    stateMutability: 'view',
  },
  {
    name: 'createReferral',
    type: 'function',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    name: 'factoryUpgradeGate',
    type: 'function',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'contract IFactoryUpgradeGate' }],
    stateMutability: 'view',
  },
  { name: 'finalizeOpenEdition', type: 'function', inputs: [], outputs: [], stateMutability: 'nonpayable' },
  {
    name: 'getApproved',
    type: 'function',
    inputs: [{ name: 'tokenId', type: 'uint256', internalType: 'uint256' }],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    name: 'getRoleAdmin',
    type: 'function',
    inputs: [{ name: 'role', type: 'bytes32', internalType: 'bytes32' }],
    outputs: [{ name: '', type: 'bytes32', internalType: 'bytes32' }],
    stateMutability: 'view',
  },
  {
    name: 'grantRole',
    type: 'function',
    inputs: [
      { name: 'role', type: 'bytes32', internalType: 'bytes32' },
      { name: 'account', type: 'address', internalType: 'address' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    name: 'hasRole',
    type: 'function',
    inputs: [
      { name: 'role', type: 'bytes32', internalType: 'bytes32' },
      { name: 'account', type: 'address', internalType: 'address' },
    ],
    outputs: [{ name: '', type: 'bool', internalType: 'bool' }],
    stateMutability: 'view',
  },
  {
    name: 'initialize',
    type: 'function',
    inputs: [
      { name: '_contractName', type: 'string', internalType: 'string' },
      { name: '_contractSymbol', type: 'string', internalType: 'string' },
      { name: '_initialOwner', type: 'address', internalType: 'address' },
      { name: '_fundsRecipient', type: 'address', internalType: 'address payable' },
      { name: '_editionSize', type: 'uint64', internalType: 'uint64' },
      { name: '_royaltyBPS', type: 'uint16', internalType: 'uint16' },
      { name: '_setupCalls', type: 'bytes[]', internalType: 'bytes[]' },
      { name: '_metadataRenderer', type: 'address', internalType: 'contract IMetadataRenderer' },
      { name: '_metadataRendererInit', type: 'bytes', internalType: 'bytes' },
      { name: '_createReferral', type: 'address', internalType: 'address' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    name: 'isAdmin',
    type: 'function',
    inputs: [{ name: 'user', type: 'address', internalType: 'address' }],
    outputs: [{ name: '', type: 'bool', internalType: 'bool' }],
    stateMutability: 'view',
  },
  {
    name: 'isApprovedForAll',
    type: 'function',
    inputs: [
      { name: 'nftOwner', type: 'address', internalType: 'address' },
      { name: 'operator', type: 'address', internalType: 'address' },
    ],
    outputs: [{ name: '', type: 'bool', internalType: 'bool' }],
    stateMutability: 'view',
  },
  {
    name: 'metadataRenderer',
    type: 'function',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'contract IMetadataRenderer' }],
    stateMutability: 'view',
  },
  {
    name: 'mintWithRewards',
    type: 'function',
    inputs: [
      { name: 'recipient', type: 'address', internalType: 'address' },
      { name: 'quantity', type: 'uint256', internalType: 'uint256' },
      { name: 'comment', type: 'string', internalType: 'string' },
      { name: 'mintReferral', type: 'address', internalType: 'address' },
    ],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'payable',
  },
  {
    name: 'mintedPerAddress',
    type: 'function',
    inputs: [{ name: 'minter', type: 'address', internalType: 'address' }],
    outputs: [
      {
        name: '',
        type: 'tuple',
        components: [
          { name: 'totalMints', type: 'uint256', internalType: 'uint256' },
          { name: 'presaleMints', type: 'uint256', internalType: 'uint256' },
          { name: 'publicMints', type: 'uint256', internalType: 'uint256' },
        ],
        internalType: 'struct IERC721Drop.AddressMintDetails',
      },
    ],
    stateMutability: 'view',
  },
  {
    name: 'multicall',
    type: 'function',
    inputs: [{ name: 'data', type: 'bytes[]', internalType: 'bytes[]' }],
    outputs: [{ name: 'results', type: 'bytes[]', internalType: 'bytes[]' }],
    stateMutability: 'nonpayable',
  },
  {
    name: 'name',
    type: 'function',
    inputs: [],
    outputs: [{ name: '', type: 'string', internalType: 'string' }],
    stateMutability: 'view',
  },
  {
    name: 'owner',
    type: 'function',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    name: 'ownerOf',
    type: 'function',
    inputs: [{ name: 'tokenId', type: 'uint256', internalType: 'uint256' }],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    name: 'presaleMintsByAddress',
    type: 'function',
    inputs: [{ name: '', type: 'address', internalType: 'address' }],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    name: 'proxiableUUID',
    type: 'function',
    inputs: [],
    outputs: [{ name: '', type: 'bytes32', internalType: 'bytes32' }],
    stateMutability: 'view',
  },
  {
    name: 'purchase',
    type: 'function',
    inputs: [{ name: 'quantity', type: 'uint256', internalType: 'uint256' }],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'payable',
  },
  {
    name: 'purchasePresale',
    type: 'function',
    inputs: [
      { name: 'quantity', type: 'uint256', internalType: 'uint256' },
      { name: 'maxQuantity', type: 'uint256', internalType: 'uint256' },
      { name: 'pricePerToken', type: 'uint256', internalType: 'uint256' },
      { name: 'merkleProof', type: 'bytes32[]', internalType: 'bytes32[]' },
    ],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'payable',
  },
  {
    name: 'purchasePresaleWithComment',
    type: 'function',
    inputs: [
      { name: 'quantity', type: 'uint256', internalType: 'uint256' },
      { name: 'maxQuantity', type: 'uint256', internalType: 'uint256' },
      { name: 'pricePerToken', type: 'uint256', internalType: 'uint256' },
      { name: 'merkleProof', type: 'bytes32[]', internalType: 'bytes32[]' },
      { name: 'comment', type: 'string', internalType: 'string' },
    ],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'payable',
  },
  {
    name: 'purchasePresaleWithRewards',
    type: 'function',
    inputs: [
      { name: 'quantity', type: 'uint256', internalType: 'uint256' },
      { name: 'maxQuantity', type: 'uint256', internalType: 'uint256' },
      { name: 'pricePerToken', type: 'uint256', internalType: 'uint256' },
      { name: 'merkleProof', type: 'bytes32[]', internalType: 'bytes32[]' },
      { name: 'comment', type: 'string', internalType: 'string' },
      { name: 'mintReferral', type: 'address', internalType: 'address' },
    ],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'payable',
  },
  {
    name: 'purchaseWithComment',
    type: 'function',
    inputs: [
      { name: 'quantity', type: 'uint256', internalType: 'uint256' },
      { name: 'comment', type: 'string', internalType: 'string' },
    ],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'payable',
  },
  {
    name: 'purchaseWithRecipient',
    type: 'function',
    inputs: [
      { name: 'recipient', type: 'address', internalType: 'address' },
      { name: 'quantity', type: 'uint256', internalType: 'uint256' },
      { name: 'comment', type: 'string', internalType: 'string' },
    ],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'payable',
  },
  {
    name: 'renounceRole',
    type: 'function',
    inputs: [
      { name: 'role', type: 'bytes32', internalType: 'bytes32' },
      { name: 'account', type: 'address', internalType: 'address' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    name: 'revokeRole',
    type: 'function',
    inputs: [
      { name: 'role', type: 'bytes32', internalType: 'bytes32' },
      { name: 'account', type: 'address', internalType: 'address' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    name: 'royaltyInfo',
    type: 'function',
    inputs: [
      { name: '', type: 'uint256', internalType: 'uint256' },
      { name: '_salePrice', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [
      { name: 'receiver', type: 'address', internalType: 'address' },
      { name: 'royaltyAmount', type: 'uint256', internalType: 'uint256' },
    ],
    stateMutability: 'view',
  },
  {
    name: 'royaltyMintSchedule',
    type: 'function',
    inputs: [],
    outputs: [{ name: '', type: 'uint32', internalType: 'uint32' }],
    stateMutability: 'view',
  },
  {
    name: 'safeTransferFrom',
    type: 'function',
    inputs: [
      { name: 'from', type: 'address', internalType: 'address' },
      { name: 'to', type: 'address', internalType: 'address' },
      { name: 'tokenId', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    name: 'safeTransferFrom',
    type: 'function',
    inputs: [
      { name: 'from', type: 'address', internalType: 'address' },
      { name: 'to', type: 'address', internalType: 'address' },
      { name: 'tokenId', type: 'uint256', internalType: 'uint256' },
      { name: '_data', type: 'bytes', internalType: 'bytes' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    name: 'saleDetails',
    type: 'function',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'tuple',
        components: [
          { name: 'publicSaleActive', type: 'bool', internalType: 'bool' },
          { name: 'presaleActive', type: 'bool', internalType: 'bool' },
          { name: 'publicSalePrice', type: 'uint256', internalType: 'uint256' },
          { name: 'publicSaleStart', type: 'uint64', internalType: 'uint64' },
          { name: 'publicSaleEnd', type: 'uint64', internalType: 'uint64' },
          { name: 'presaleStart', type: 'uint64', internalType: 'uint64' },
          { name: 'presaleEnd', type: 'uint64', internalType: 'uint64' },
          { name: 'presaleMerkleRoot', type: 'bytes32', internalType: 'bytes32' },
          { name: 'maxSalePurchasePerAddress', type: 'uint256', internalType: 'uint256' },
          { name: 'totalMinted', type: 'uint256', internalType: 'uint256' },
          { name: 'maxSupply', type: 'uint256', internalType: 'uint256' },
        ],
        internalType: 'struct IERC721Drop.SaleDetails',
      },
    ],
    stateMutability: 'view',
  },
  {
    name: 'salesConfig',
    type: 'function',
    inputs: [],
    outputs: [
      { name: 'publicSalePrice', type: 'uint104', internalType: 'uint104' },
      { name: 'maxSalePurchasePerAddress', type: 'uint32', internalType: 'uint32' },
      { name: 'publicSaleStart', type: 'uint64', internalType: 'uint64' },
      { name: 'publicSaleEnd', type: 'uint64', internalType: 'uint64' },
      { name: 'presaleStart', type: 'uint64', internalType: 'uint64' },
      { name: 'presaleEnd', type: 'uint64', internalType: 'uint64' },
      { name: 'presaleMerkleRoot', type: 'bytes32', internalType: 'bytes32' },
    ],
    stateMutability: 'view',
  },
  {
    name: 'setApprovalForAll',
    type: 'function',
    inputs: [
      { name: 'operator', type: 'address', internalType: 'address' },
      { name: 'approved', type: 'bool', internalType: 'bool' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    name: 'setFundsRecipient',
    type: 'function',
    inputs: [{ name: 'newRecipientAddress', type: 'address', internalType: 'address payable' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    name: 'setMetadataRenderer',
    type: 'function',
    inputs: [
      { name: 'newRenderer', type: 'address', internalType: 'contract IMetadataRenderer' },
      { name: 'setupRenderer', type: 'bytes', internalType: 'bytes' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    name: 'setOwner',
    type: 'function',
    inputs: [{ name: 'newOwner', type: 'address', internalType: 'address' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    name: 'setSaleConfiguration',
    type: 'function',
    inputs: [
      { name: 'publicSalePrice', type: 'uint104', internalType: 'uint104' },
      { name: 'maxSalePurchasePerAddress', type: 'uint32', internalType: 'uint32' },
      { name: 'publicSaleStart', type: 'uint64', internalType: 'uint64' },
      { name: 'publicSaleEnd', type: 'uint64', internalType: 'uint64' },
      { name: 'presaleStart', type: 'uint64', internalType: 'uint64' },
      { name: 'presaleEnd', type: 'uint64', internalType: 'uint64' },
      { name: 'presaleMerkleRoot', type: 'bytes32', internalType: 'bytes32' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    name: 'supportsInterface',
    type: 'function',
    inputs: [{ name: 'interfaceId', type: 'bytes4', internalType: 'bytes4' }],
    outputs: [{ name: '', type: 'bool', internalType: 'bool' }],
    stateMutability: 'view',
  },
  {
    name: 'symbol',
    type: 'function',
    inputs: [],
    outputs: [{ name: '', type: 'string', internalType: 'string' }],
    stateMutability: 'view',
  },
  {
    name: 'tokenURI',
    type: 'function',
    inputs: [{ name: 'tokenId', type: 'uint256', internalType: 'uint256' }],
    outputs: [{ name: '', type: 'string', internalType: 'string' }],
    stateMutability: 'view',
  },
  {
    name: 'totalSupply',
    type: 'function',
    inputs: [],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    name: 'transferFrom',
    type: 'function',
    inputs: [
      { name: 'from', type: 'address', internalType: 'address' },
      { name: 'to', type: 'address', internalType: 'address' },
      { name: 'tokenId', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    name: 'updateCreateReferral',
    type: 'function',
    inputs: [{ name: 'recipient', type: 'address', internalType: 'address' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    name: 'updateRoyaltyMintSchedule',
    type: 'function',
    inputs: [{ name: 'newSchedule', type: 'uint32', internalType: 'uint32' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    name: 'upgradeTo',
    type: 'function',
    inputs: [{ name: 'newImplementation', type: 'address', internalType: 'address' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    name: 'upgradeToAndCall',
    type: 'function',
    inputs: [
      { name: 'newImplementation', type: 'address', internalType: 'address' },
      { name: 'data', type: 'bytes', internalType: 'bytes' },
    ],
    outputs: [],
    stateMutability: 'payable',
  },
  { name: 'withdraw', type: 'function', inputs: [], outputs: [], stateMutability: 'nonpayable' },
  {
    name: 'withdrawRewards',
    type: 'function',
    inputs: [
      { name: 'to', type: 'address', internalType: 'address' },
      { name: 'amount', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    name: 'zoraERC721TransferHelper',
    type: 'function',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    name: 'zoraFeeForAmount',
    type: 'function',
    inputs: [{ name: 'quantity', type: 'uint256', internalType: 'uint256' }],
    outputs: [
      { name: 'recipient', type: 'address', internalType: 'address payable' },
      { name: 'fee', type: 'uint256', internalType: 'uint256' },
    ],
    stateMutability: 'view',
  },
  { type: 'receive', stateMutability: 'payable' },
]
